---
title: "Analyzing bayesNMF and SignatureAnalyzer results on study 2 sparse data"
author: "Jenna Landy"
---

```{r}
library(tidyverse)
library(ggplot2)
library(bayesNMF)
library(ggh4x)
library(cowplot)
library(glue)
library(gridExtra)
library(grid)

data_dir <- "../../data/study2_sparse"
output_dir <- "../../output/study2_sparse"
processed_dir <- "../../processed/study2_sparse"
figures_dir <- "../../figures/study2_sparse"
```

```{r}
color_list <- c(
  'P_T_MH_SBFI' = "#0072B2",
  "signatureanalyzer_L2" = "#009E73"
)

color_names <- c(
  'P_T_MH_SBFI' = "Poisson-Truncated Normal + MH SBFI",
  "signatureanalyzer_L2" = "SignatureAnalyzer L2"
)
```

```{r}
results_bayesNMF <- read.csv(file.path(processed_dir, "metrics.csv"))
results_SA <- read.csv(file.path(processed_dir, "metrics_signatureanalyzer.csv")) %>%
  mutate(total_minutes = seconds/60) %>%
  select(colnames(results_bayesNMF))

results <- rbind(results_bayesNMF, results_SA)

results %>%
  group_by(model) %>%
  tally()
```

## Plot results

```{r}
rank_metrics_aligned <- results %>%
  mutate(
    model = factor(model, levels = names(color_list))
  ) %>%
  mutate(
    rank_bias = learned_rank - N
  ) %>%
  pivot_longer(c(precision, sensitivity, rank_bias, total_minutes), names_to = "metric", values_to = "value") %>%
  mutate(
    metric = factor(metric, levels = c('rank_bias','precision','sensitivity', 'total_minutes'), labels = c('Rank Bias','Precision','Sensitivity', 'Minutes'))
  ) %>%
  ggplot(aes(x = as.factor(N), y = value, color = model)) +
  facet_grid(rows = vars(metric), scales = 'free', switch = 'y') +
  geom_boxplot() +
  labs(
    x = "True Rank",
    color = "Model"
  ) +
  theme(
    text = element_text(size = 20),
    legend.position = "top",
    legend.justification = "left",
    axis.title.y = element_blank(),
    strip.text.y.left = element_text(angle = 0),
    strip.placement = 'outside'
  ) +
  scale_color_manual(
    breaks = names(color_list),
    labels = color_names,
    values = color_list
  ) +
  guides(
    color = guide_legend(nrow = 2, byrow = TRUE)
  )
ggsave(file.path(figures_dir, "rank_metrics_aligned.png"), rank_metrics_aligned, width = 15, height = 13)
```

## Combine with data figures

```{r}
row_1 <- readRDS(file.path(figures_dir, "sparsity_data.rds"))
row_2 <- rank_metrics_aligned +
  theme_light(base_size = 12) +
  ggtitle("C. Learning Rank Results") +
  theme(
    legend.position = "top",
    legend.justification = "left",
    legend.direction = "horizontal",
    legend.title = element_text(size = 9, face = "bold"),
    legend.text = element_text(size = 8),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "white", color = "black", linewidth = 0.5),
    strip.text = element_text(color = 'black'),
    plot.background = element_rect(fill = "white", color = "black", linewidth = 0.5),
    plot.title.position = "plot"
  ) +
  guides(
    color = guide_legend(nrow = 1, byrow = TRUE)
  ) +
  ggh4x::facetted_pos_scales(
    y = list(NULL, scale_y_continuous(limits = c(0, 1.05)), scale_y_continuous(limits = c(0, 1.05)), scale_y_continuous(trans = "log2"))
  )

combined <- gridExtra::grid.arrange(row_1, row_2, nrow = 2, heights = c(1, 1.5))
ggsave(file.path(figures_dir, "study2_sparse.png"), combined, width = 7, height = 7)
```