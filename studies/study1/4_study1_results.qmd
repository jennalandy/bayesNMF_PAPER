---
title: "Analyzing study 1 results"
author: "Jenna Landy"
---

This analysis assumes `study1_processing.R` has been run, and that the metrics are in `processed/study1/metrics.csv`.

```{r}
library(bayesNMF)
library(tidyverse)
library(ggplot2)
library(ggridges)
library(grid)
library(gridExtra)
library(glue)
library(cowplot)
library(ggh4x)
source("../study1_visualization_functions.R")

data_dir <- "../../data/study1"
output_dir <- "../../output/study1"
processed_dir <- "../../processed/study1"
figures_dir <- "../../figures/study1"
```

```{r}
color_list <- c(
  'P_E' = "#D55E00",    # dark orange
  'P_E_MH' = "#E69F00", # orange
  'P_G' = "#0072B2",    # dark blue
  'P_T_MH' = "#56B4E9", # blue
  'N_E' = "black",
  'N_T' = "grey"
)

color_names <- c(
  'P_E' = "Poisson-Exponential",
  'P_E_MH' = "Poisson-Exponential + MH",
  'P_G' = "Poisson-Gamma",
  'P_T_MH' = "Poisson-Truncated Normal + MH",
  'N_E' = "Normal-Exponential",
  'N_T' = "Normal-Truncated Normal"
)

prior_colors <- c(
  'Exponential' = "#E69F00",
  "Gamma / Truncated Normal" = "#56B4E9",
  "Truncated Normal" = "#56B4E9"
)
```

## Load processed results

The `metrics` dataframe holds metrics comparing each result to ground truth.
```{r}
metrics <- read_csv(file.path(processed_dir, "metrics.csv"))
metrics %>%
  group_by(N, G, likelihood, prior, MH) %>%
  tally() %>%
  arrange(n)
```

The following dataframes hold metrics comparing each result to the other results for the same dataset. Models are compared to others with the same prior (Gamma is compared to the Truncated Normal).
```{r}
Poisson_vs_Normal_MAPs <- read_csv(file.path("../../processed/study1_save", "Poisson_vs_Normal_MAPs.csv"))
head(Poisson_vs_Normal_MAPs)

Standard_vs_MH_MAPs <- read_csv(file.path(processed_dir, "Standard_vs_MH_MAPs.csv"))
head(Standard_vs_MH_MAPs)

Standard_vs_Standard_repeated_MAPs <- read_csv(file.path("../../processed/study1_save", "Standard_vs_Standard_repeated_MAPs.csv"))
head(Standard_vs_Standard_repeated_MAPs)
```

This dataframe holds metrics comparing credible intervals between Poisson and Poisson + MH.
```{r}
Standard_vs_MH_CIs <- read_csv(file.path(processed_dir, "Standard_vs_MH_CIs.csv"))
Standard_vs_MH_CIs %>%
  group_by(compare, prior) %>%
  tally()
```

## All metrics

```{r}
metrics %>%
  pivot_longer(c(min_sim, total_minutes, RMSE, KL, iters, mean_mean_acceptance_P, mean_mean_acceptance_E), names_to = "metric", values_to = "value") %>%
  arrange(N) %>%
  mutate(
    N = paste(N, "Signatures"),
    N = factor(N, levels = unique(N)),
    metric = factor(
      metric,
      levels = c("min_sim", "total_minutes", "RMSE", "KL", "iters", "mean_mean_acceptance_P", "mean_mean_acceptance_E"),
      labels = c("Min Cosine Similarity", "Total Minutes", "RMSE", "KL Divergence", "Iterations", "Mean acceptance P", "Mean acceptance E")
    ),
    model = paste(likelihood, prior, sep = "_"),
    model = ifelse(MH, paste(model, "MH", sep = "_"), model),
    model = factor(model, levels = names(color_list))
  ) %>%
  ggplot(aes(x = as.factor(G), y = value, color = model)) +
  facet_grid(rows = vars(metric), cols = vars(N), scales = "free") +
  geom_boxplot() +
  theme_bw() +
  labs(
    x = "Sample Size",
    color = "Model"
  ) +
  theme(
    axis.title.y = element_blank(),
    legend.position = 'top',
    legend.justification = 'left'
  ) +
  scale_color_manual(breaks = names(color_list), values = color_list, labels = color_names)
ggsave(file.path(figures_dir, "study1_metrics.png"), width = 7, height = 10)
```

## Acceptance rates

```{r}
acceptance_rates <- metrics %>%
  filter(MH) %>%
  pivot_longer(cols = c(mean_mean_acceptance_P, mean_mean_acceptance_E), names_to = "which", values_to = "value") %>%
  mutate(
    which = case_when(
      which == "mean_mean_acceptance_P" ~ "Signatures",
      which == "mean_mean_acceptance_E" ~ "Exposures"
    ),
    which = factor(which, levels = c("Signatures", "Exposures"))
  ) %>%
  ggplot(aes(x = factor(G, levels = sort(unique(G))), y = value, color = model)) +
  facet_grid(rows = vars(which), cols = vars(N), scales = "free") +
  geom_boxplot() +
  labs(
    x = "Sample Size",
    y = "Mean acceptance rate",
    color = "Matrix"
  ) +
  theme_bw() +
  theme(
    legend.position = "top",
    legend.justification = "left"
  )
ggsave(file.path(figures_dir, "acceptance_rates.png"), width = 10, height = 5)
```

## Comparing MAPs

```{r}
threshold <- 0.95

# how many points are we excluding?
Poisson_vs_Normal_MAPs %>%
  rbind(Standard_vs_MH_MAPs) %>%
  rbind(Standard_vs_Standard_repeated_MAPs) %>%
  mutate(
    P_under = P_min_cosine < threshold,
    E_under = E_min_cosine < threshold
  ) %>%
  group_by(compare, prior) %>%
  summarize(
    n_P = sum(P_under),
    n_E = sum(E_under),
    n = length(P_under)
  )

PN_title = "Poisson\n-vs-\nNormal"
MH_title = "Poisson\n-vs-\nPoisson + MH"
PR_title = "Poisson\n-vs-\nPoisson"
```

```{r}
figA_greyscale <- Poisson_vs_Normal_MAPs %>%
  rbind(Standard_vs_MH_MAPs) %>%
  rbind(Standard_vs_Standard_repeated_MAPs) %>%
  mutate(
    compare = case_when(
      compare == 'Normal<vs>Poisson' ~ PN_title,
      compare == 'Poisson<vs>Poisson_MH' ~ MH_title,
      compare == 'Poisson<vs>Poisson_repeated' ~ PR_title
    ),
    compare = factor(compare, levels = c(PN_title, MH_title, PR_title)),
    prior = ifelse(prior == "Gamma / Truncated Normal", "Truncated Normal / Gamma", prior),
    prior = factor(prior, levels = c("Truncated Normal / Gamma", "Exponential"))
  ) %>%
  select(N, G, rep, prior, compare, P_min_cosine, E_min_cosine) %>%
  pivot_longer(cols = c(P_min_cosine, E_min_cosine)) %>%
  mutate(
    name = ifelse(
      name == "E_min_cosine",
      "Exposures Matrix (E)",
      "Signatures Matrix (P)"
    )
  ) %>%
  ggplot(aes(x = value, y = rev(prior), fill = prior)) +
  facet_grid(cols = vars(name), rows = vars(compare), switch = 'y') +
  geom_vline(xintercept = 0.99, linetype = "dashed") +
  geom_density_ridges(scale = 2, bandwidth = 0.001, linewidth = 0.5, alpha = 1) +
  labs(
    x = "Minimum cosine similarity between MAP estimates",
    fill = "Prior"
  ) +
  scale_x_continuous(breaks = seq(0.9, 1, 0.05), limits = c(threshold, 1.01)) +
  theme_light(base_size = 12) +
  theme(
    text = element_text(size = 12),
    legend.position = "top",
    legend.justification = "left",
    legend.text = element_text(size = 9),
    legend.title = element_text(size = 10),
    legend.key.size = unit(0.6, "lines"),
    strip.placement = 'outside',
    strip.background = element_rect(fill = "white", color = 'grey'),
    strip.text = element_text(color = "black"),
    strip.text.y.left = element_text(angle = 0),
    panel.grid.major = element_line(size = 0.5),
    panel.grid.minor = element_line(size = 0.5),
    axis.title.y = element_blank(),
    axis.text.y.left = element_blank(),
    axis.ticks.y.left = element_blank(),
    plot.background = element_rect(fill = "white")
  ) +
  scale_fill_manual(values = c("Truncated Normal / Gamma" = "grey", "Exponential" = "white")) 

ggsave(file.path(figures_dir, "study1_compare_MAPs.png"), figA_greyscale, width = 10, height = 10)
```

## Relative efficiency

Poisson + MH is much faster than standard
```{r}
# plot total_minutes for Poisson (standard) vs Poisson + MH
dat <- metrics %>%
  filter(likelihood == "P") %>%
  mutate(
    prior = case_when(
      prior == "E" ~ "Exponential",
      prior %in% c("T", "G") ~ "Gamma / Truncated Normal"
    ),
    MH = if_else(MH, "MH", "non_MH")
  ) %>%
  select(N, G, rep,prior, MH, total_minutes) %>% 
  data.frame() %>%
  pivot_wider(names_from = MH, values_from = total_minutes) 
```

```{r}
figB_greyscale <- dat %>%
  arrange(N) %>%
  mutate(
    prior = ifelse(prior == "Gamma / Truncated Normal", "Truncated Normal / Gamma", prior),
    prior = factor(prior, levels = c("Truncated Normal / Gamma", "Exponential")),
    speedup = non_MH / MH,
    N = paste("N =",N),
    N = factor(N, levels = rev(unique(N)))
  ) %>%
  ggplot(aes(x = as.factor(G), y = speedup, fill = prior)) +
  facet_grid(rows = vars(N), switch = 'y') +
  geom_boxplot(linewidth = 0.3, outlier.size = 0.5)+
  labs(
    x = "Sample Size",
    y = "Speedup (Poisson / Poisson + MH)",
    color = "Prior", fill = "Prior", alpha = "Prior"
  ) +
  theme_light(base_size = 12) +
  theme(
    text = element_text(size = 12),
    legend.position = "top",
    legend.justification = "left",
    legend.text = element_text(size = 9),
    legend.title = element_text(size = 10, face = "bold"),
    strip.placement = 'outside',
    strip.background = element_rect(fill = "white", color = 'grey'),
    strip.text = element_text(color = "black"),
    strip.text.y.left = element_text(angle = 0),
    panel.grid.major = element_line(size = 0.5),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(fill = "white")
  ) +
  scale_fill_manual(values = c("Truncated Normal / Gamma" = "grey", "Exponential" = "white")) 
```

## Metrics of novel models

```{r}
metrics_names = list(
  "min_sim" = "Minimum Signature\nCosine Similarity",
  "RMSE" = "Reconstruction\nRMSE",
  "KL" = "Reconstruction\nKL Divergence",
  "total_minutes" = "Runtime (Minutes)"
)
figC_greyscale <- metrics %>%
  filter(MH) %>%
  arrange(N, G) %>%
  mutate(
    prior = case_when(
      prior == "E" ~ "Exponential",
      prior %in% c("T", "G") ~ "Truncated Normal / Gamma"
    ),
    prior = factor(prior, levels = c("Truncated Normal / Gamma", "Exponential")),
    N = paste("N =", N, "Signatures"),
    N = factor(N, levels = unique(N)),
    G = factor(G, levels = unique(G))
  ) %>%
  pivot_longer(
    cols = c(min_sim, RMSE, KL, total_minutes),
    names_to = 'metric'
  ) %>%
  mutate(
    metric = factor(metric, levels = names(metrics_names), labels = metrics_names)
  ) %>%
  ggplot(aes(x = as.factor(G), y = value, fill = prior)) +
  facet_grid(rows = vars(metric), cols = vars(N), switch = 'y', scales = 'free') +
  geom_boxplot(linewidth = 0.3, outlier.size = 0.5) +
  labs(
    x = 'Sample Size',
    fill = 'Prior'
  )  +
  theme_light(base_size = 12) +
  theme(
    text = element_text(size = 12),
    legend.position = "top",
    legend.justification = "left",
    legend.text = element_text(size = 9),
    legend.title = element_text(size = 10, face = "bold"),
    strip.placement = 'outside',
    strip.background = element_rect(fill = "white", color = 'grey'),
    strip.text = element_text(color = "black"),
    strip.text.y.left = element_text(angle = 0),
    panel.grid.major = element_line(size = 0.5),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(fill = "white"),
    axis.title.y = element_blank()
  ) +
  scale_fill_manual(values = c("Truncated Normal / Gamma" = "grey", "Exponential" = "white")) 
```

## Create main text figure

```{r}
g_legend <- function(a.gplot) {
  # from https://stackoverflow.com/questions/13649473/add-a-common-legend-for-combined-ggplots
  tmp <- ggplot_gtable(ggplot_build(a.gplot))
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
  legend <- tmp$grobs[[leg]]
  return(legend)
}

legend_greyscale <- g_legend(figA_greyscale)
blank <- ggplot() + theme_void()
margin <- 0.02

figA_greyscale_with_caption <- ggdraw(
  figA_greyscale + 
    ggtitle("A. Agreement of Final Estimates") +
    labs(
      x = "Minimum cosine similarity"
    ) +
    theme(
      plot.title.position = "plot",
      plot.title = element_text(size = 12),
      legend.position = "none"
    )
)

# A + B in one row with panel tags
rowAB_greyscale <- plot_grid(
  figA_greyscale_with_caption, 
  blank,
  figB_greyscale + 
    theme(legend.position = "none") + 
    ggtitle("B. Relative Efficiency\n     Poisson + MH relative to Poisson") +
    theme(
      plot.title.position = "plot",
      axis.title.y = element_blank(),
      plot.title = element_text(size = 12)
    ),
  nrow = 1, rel_widths = c(3, margin*3, 2),
  # labels = c("A", "B"),
  label_size = 12, label_fontface = "bold",
  label_x = 0.01, label_y = 0.99, hjust = 0, vjust = 1
)

# C with its own tag
panelC_greyscale <- ggdraw(
  figC_greyscale + 
    theme(
      legend.position = "none",
      plot.title.position = "plot",
      plot.title = element_text(size = 12)
    ) +
    ggtitle("C. Poisson + MH metrics as dimensions change") +
    ggh4x::facetted_pos_scales(
      y = list(NULL, NULL, NULL, scale_y_continuous(trans = "log2"))
    )
) 

# stack legend, (A|B), and C
fig_greyscale <- plot_grid(
  legend_greyscale,
  rowAB_greyscale,
  blank,
  panelC_greyscale,
  ncol = 1,
  rel_heights = c(0.08, 1, margin, 1)  # adjust to taste
)

ggsave(file.path(figures_dir, "study1_greyscale.png"), fig_greyscale, width = 7, height = 7)
```

```{r}
#--- helper to add a border around a grob or ggplot ---
add_border <- function(obj, color = "black", lwd = 1) {
  grob_obj <- if (inherits(obj, "ggplot")) ggplotGrob(obj) else obj
  grobTree(
    grob_obj,
    rectGrob(gp = gpar(col = color, lwd = lwd, fill = NA))
  )
}

#--- helper to add a title label above a grob ---
add_label_above <- function(label, grob, size = 12, vspace = 0.2) {
  title_grob <- textGrob(
    label, x = 0, y = 1,
    just = c("left", "top"),
    gp = gpar(fontsize = size)
  )
  gridExtra::arrangeGrob(
    title_grob,
    grob,
    ncol = 1,
    heights = unit.c(grobHeight(title_grob) + unit(vspace, "lines"),
                     unit(1, "null"))
  )
}

#--- apply to your objects ---
legend_boxed <- add_border(
  legend_greyscale <- g_legend(
    figA_greyscale +
    theme(legend.text = element_text(size = 12), legend.title = element_text(size = 12))
  )
)

figA_boxed <- add_border(
  figA_greyscale +
    labs(
      x = "Minimum cosine similarity"
    ) +
    theme(
      plot.title = element_blank(),
      legend.position = "none"
    )
)
figA_labeled <- add_label_above("A. Agreement of Final Estimates", figA_boxed)

figB_boxed <- add_border(
  figB_greyscale +
    labs(
      y = "Speedup\nPoisson / Poisson + MH"
    ) +
    theme(
      plot.title = element_blank(),
      legend.position = "none",
      strip.text.y.left = element_text(angle = 90, size = 12)
    )
)
figB_labeled <- add_label_above("B. Relative Efficiency", figB_boxed)

row_1 <- gridExtra::arrangeGrob(
  figA_labeled,
  grid::nullGrob(),
  figB_labeled,
  nrow = 1,
  widths = c(3, margin*3, 2)
)

figC_boxed <- add_border(
  figC_greyscale +
    theme(
      legend.position = "none",
      plot.title = element_blank()
    )
)
figC_labeled <- add_label_above("C. Poisson + MH Metrics", figC_boxed)

final_plot <- gridExtra::grid.arrange(
  legend_boxed,
  grid::nullGrob(),
  row_1,
  grid::nullGrob(), # padding column
  figC_labeled,
  ncol = 1,
  heights = c(0.1, unit(0.03, "in"), 1, unit(0.03, "in"), 1) 
)

ggsave(file.path(figures_dir, "study1_greyscale_boxed.png"), plot = final_plot, width = 7, height = 7)
```

## Comparing credible intervals

```{r}
P_10 <- Standard_vs_MH_CIs %>%
  select(N, G, rep, prior, compare, P_q10_width_diff) %>%
  arrange(N, G, prior, compare) %>%
  mutate(
    value = P_q10_width_diff,
    g = paste0(prior, compare, G),
    g = factor(g, levels = unique(g)),
    N = paste(N, "Signatures"),
    N = factor(N, levels = unique(N))
  )
P_90 <- Standard_vs_MH_CIs %>%
  select(N, G, rep, prior, compare, P_q90_width_diff) %>%
  arrange(N, G, prior, compare) %>%
  mutate(
    value = P_q90_width_diff,
    g = paste0(prior, compare, G),
    g = factor(g, levels = unique(g)),
    N = paste(N, "Signatures"),
    N = factor(N, levels = unique(N))
  )
E_10 <- Standard_vs_MH_CIs %>%
  select(N, G, rep, prior, compare, E_q10_width_diff) %>%
  arrange(N, G, prior, compare) %>%
  mutate(
    value = E_q10_width_diff,
    g = paste0(prior, compare, G),
    g = factor(g, levels = unique(g)),
    N = paste(N, "Signatures"),
    N = factor(N, levels = unique(N))
  )
E_90 <- Standard_vs_MH_CIs %>%
  select(N, G, rep, prior, compare, E_q90_width_diff) %>%
  arrange(N, G, prior, compare) %>%
  mutate(
    value = E_q90_width_diff,
    g = paste0(prior, compare, G),
    g = factor(g, levels = unique(g)),
    N = paste(N, "Signatures"),
    N = factor(N, levels = unique(N))
  )

dat <- E_10 %>% 
  mutate(name = "10th percentile", type = "Exposures Matrix\nScale = Number of Mutations", diff = E_q10_width_diff) %>%
  select(-E_q10_width_diff) %>%
  rbind(
    E_90 %>% 
    mutate(name = "90th percentile", type = "Exposures Matrix\nScale = Number of Mutations", diff = E_q90_width_diff) %>%
    select(-E_q90_width_diff)
  ) %>%
  rbind(
    P_10 %>% mutate(name = "10th percentile", type = "Signatures Matrix\nScale = Probability", diff = P_q10_width_diff) %>%
    select(-P_q10_width_diff)
  ) %>%
  rbind(
    P_90 %>% 
    mutate(name = "90th percentile", type = "Signatures Matrix\nScale = Probability", diff = P_q90_width_diff) %>%
    select(-P_q90_width_diff)
  )
  
comparing_widths_combo = ggplot(dat) +
  ggh4x::facet_grid2(cols = vars(type), rows = vars(N), scales = "free_y", independent = "y") +
  geom_boxplot(
    data = dat %>% filter(name == "10th percentile"),
    aes(x = as.factor(G), y = diff, fill = prior, alpha = compare, group = g),
    linewidth = 0.1
  ) +
  geom_boxplot(
    data = dat %>% filter(name == "90th percentile"),
    aes(x = as.factor(G), y = diff, fill = prior, alpha = compare, group = g),
    linewidth = 0.1
  ) +
  labs(
    x = "Sample Size (G)",
    y = "Difference in CI width: Poisson - (Poisson + MH)\n10th percentile (negative) and 90th percentile (positive)",
    fill = "Prior",
    alpha = "Comparison"
  ) +
  scale_alpha_manual(
    breaks = c("Poisson<vs>Poisson_repeated", "Poisson<vs>Poisson_MH"),
    labels = c("Poisson<vs>Poisson_repeated" = "Poisson vs Poisson", "Poisson<vs>Poisson_MH" = "Poisson vs Poisson + MH"),
    values = c("Poisson<vs>Poisson_repeated" = 0.1, "Poisson<vs>Poisson_MH" = 1)
  ) +
  scale_fill_manual(breaks = names(prior_colors), values = prior_colors) +
  guides(
    alpha = guide_legend(override.aes = list(fill = 'black'))
  ) +
  theme_light() +
  theme(
    strip.text = element_text(color = 'black'),
    strip.background = element_rect(fill = "white", color = "black", linewidth = 0.5),
    legend.position = "bottom"
  )
ggsave(file.path(figures_dir, "study1_compare_widths_combo.png"), comparing_widths_combo, width = 8, height = 7)
```